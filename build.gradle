plugins {
    id "idea"
    id "groovy"
    id "com.github.erdi.webdriver-binaries" version "2.4"
    id "com.github.erdi.idea-base" version "2.2"
}

ext {
    // The drivers we want to use
    drivers = ["chrome","firefox", "edge"]

    ext {
        groovyVersion = '2.4.12'
        gebVersion = '2.2'
        seleniumVersion = '3.6.0'
        chromeDriverVersion = '100.0.4896.20'
        geckoDriverVersion = '0.23.0'
        edgeDriverVersion = '100.0.1185.29'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //compile 'org.codehaus.groovy:groovy-all:2.4.6'
    // If using Spock, need to depend on geb-spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:$gebVersion"

    // Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-edge-driver:$seleniumVersion"

    compile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.14.0'
    
    // JSON simple for MuukReport
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1' 

}

webdriverBinaries {
    driverUrlsConfiguration = resources.text.fromFile('packages.json')
    chromedriver chromeDriverVersion
    geckodriver geckoDriverVersion
    edgedriver edgeDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}
